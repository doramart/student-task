"use strict";(self["webpackChunk_student_task_client"]=self["webpackChunk_student_task_client"]||[]).push([[524],{1396:function(t,e,a){a.r(e),a.d(e,{default:function(){return Y}});a(9454),a(2048);var s=a(6602),o=a(2563),i=function(){var t=this,e=t._self._c;return e("div",{staticClass:"task-board"},[e("div",{staticClass:"fixed-header",class:{scrolled:t.isScrolled}},[e("van-nav-bar",{attrs:{title:t.navTitle,"left-arrow":!t.isToday},on:{"click-left":t.onBack},scopedSlots:t._u([{key:"right",fn:function(){return[e("div",{staticClass:"nav-right-icons"},[e("van-icon",{staticClass:"nav-icon",attrs:{name:"chat-o"},on:{click:t.gotoChatbot}}),t.isToday?e("van-icon",{staticClass:"nav-icon",attrs:{name:"add-o"},on:{click:function(e){t.showAddTask=!0}}}):t._e(),t.$store.state.isLoggedIn?e("van-icon",{staticClass:"nav-icon user-icon",attrs:{name:"manager-o"},on:{click:function(e){t.showUserMenu=!0}}}):t._e()],1)]},proxy:!0}])}),e("DateNavigator")],1),e("div",{staticClass:"main-content"},[t.currentTasks.length>0?e("div",{staticClass:"task-stats"},[e("div",{staticClass:"overall-progress"},[e("div",{staticClass:"progress-text"},[e("span",[t._v("今日完成进度")]),e("span",{staticClass:"progress-ratio"},[t._v(t._s(t.progressPivotText))])]),e("van-progress",{attrs:{percentage:t.currentTasksStats.percentage,color:"#1989fa","stroke-width":"6px","show-pivot":t.shouldShowPivot,"pivot-text":t.progressPivotText,"pivot-color":"#1989fa"}})],1),e("div",{staticClass:"subjects-progress"},[e("div",{staticClass:"subjects-scroll-container"},t._l(t.activeSubjectStats,function(a,s){return e("div",{key:s,staticClass:"subject-circle-item"},[e("van-circle",{staticClass:"subject-circle",attrs:{value:a.completed/a.total*100,color:t.getSubjectColor(s),size:40,"stroke-width":80,"layer-color":"#ebedf0",text:`${a.completed}/${a.total}`}}),e("div",{staticClass:"subject-name"},[t._v(" "+t._s(s)+" ")])],1)}),0)])]):t._e(),e("van-pull-refresh",{on:{refresh:t.onRefresh},model:{value:t.refreshing,callback:function(e){t.refreshing=e},expression:"refreshing"}},[e("div",{staticClass:"task-list"},[t._l(t.subjects,function(a){return e("div",{key:a,staticClass:"subject-section"},[t.tasksBySubject[a].length>0?[e("div",{staticClass:"subject-header"},[e("van-icon",{attrs:{name:t.getSubjectIcon(a)}}),e("span",[t._v(t._s(a))]),e("van-tag",{attrs:{color:t.getSubjectColor(a),plain:""}},[t._v(" "+t._s(t.tasksBySubject[a].length)+" ")])],1),e("div",{staticClass:"subject-tasks"},t._l(t.tasksBySubject[a],function(a){return e("TaskItem",{key:a._id,attrs:{task:a,readonly:t.isTaskReadonly(a)},on:{update:t.onUpdateTask,delete:t.onDeleteTask}})}),1)]:t._e()],2)}),t.loading||0!==t.currentTasks.length?t._e():e("div",{staticClass:"empty-state"},[e("van-empty",{attrs:{description:t.isToday?"还没有任务，点击右上角添加":"该日期没有任务记录",image:"search"}})],1)],2)]),t.loading?e("div",{staticClass:"loading-skeleton"},[e("van-skeleton",{attrs:{title:"",row:2}}),e("van-skeleton",{attrs:{title:"",row:2}}),e("van-skeleton",{attrs:{title:"",row:2}})],1):t._e(),e("van-popup",{style:{height:"60%"},attrs:{position:"bottom"},model:{value:t.showAddTask,callback:function(e){t.showAddTask=e},expression:"showAddTask"}},[e("div",{staticClass:"add-task-popup"},[e("div",{staticClass:"popup-header"},[e("van-button",{attrs:{plain:""},on:{click:function(e){t.showAddTask=!1}}},[t._v("取消")]),e("h3",[t._v("添加任务")]),e("van-button",{attrs:{type:"primary",loading:t.submitting},on:{click:t.onAddTask}},[t._v("确定")])],1),e("div",{staticClass:"popup-content"},[e("van-cell-group",[e("van-field",{attrs:{label:"任务标题",placeholder:"请输入任务标题",required:""},model:{value:t.newTask.title,callback:function(e){t.$set(t.newTask,"title",e)},expression:"newTask.title"}}),e("van-field",{attrs:{label:"任务描述",placeholder:"请输入任务描述（可选）",type:"textarea",rows:"2"},model:{value:t.newTask.description,callback:function(e){t.$set(t.newTask,"description",e)},expression:"newTask.description"}}),e("van-field",{attrs:{label:"选择科目",placeholder:"请选择科目",readonly:"","is-link":""},on:{click:t.onSubjectFieldClick},model:{value:t.newTask.subject,callback:function(e){t.$set(t.newTask,"subject",e)},expression:"newTask.subject"}}),e("van-field",{attrs:{label:"截止时间",placeholder:"请选择截止时间",readonly:""},on:{click:function(e){t.showDatePicker=!0}},model:{value:t.newTask.deadline,callback:function(e){t.$set(t.newTask,"deadline",e)},expression:"newTask.deadline"}})],1)],1)])]),e("van-popup",{attrs:{position:"bottom"},model:{value:t.showSubjectPicker,callback:function(e){t.showSubjectPicker=e},expression:"showSubjectPicker"}},[e("van-picker",{attrs:{columns:t.subjects,title:"选择科目","show-toolbar":""},on:{confirm:t.onSubjectConfirm,cancel:t.onSubjectCancel}})],1),e("van-popup",{attrs:{position:"bottom"},model:{value:t.showDatePicker,callback:function(e){t.showDatePicker=e},expression:"showDatePicker"}},[e("van-datetime-picker",{attrs:{type:"datetime",title:"选择截止时间"},on:{confirm:t.onDateConfirm,cancel:function(e){t.showDatePicker=!1}},model:{value:t.pickerDate,callback:function(e){t.pickerDate=e},expression:"pickerDate"}})],1),e("RewardModal",{attrs:{visible:t.showRewardModal,type:t.rewardType,"subject-name":t.completedSubjectName},on:{close:t.onCloseRewardModal}}),e("van-popup",{attrs:{position:"bottom"},model:{value:t.showUserMenu,callback:function(e){t.showUserMenu=e},expression:"showUserMenu"}},[e("div",{staticClass:"user-menu-popup"},[e("div",{staticClass:"popup-header"},[e("h3",[t._v("用户信息")]),e("van-icon",{attrs:{name:"cross"},on:{click:function(e){t.showUserMenu=!1}}})],1),e("div",{staticClass:"user-info"},[e("div",{staticClass:"user-avatar"},[e("van-icon",{attrs:{name:"manager-o",size:"40"}})],1),e("div",{staticClass:"user-details"},[e("div",{staticClass:"user-name"},[t._v(" "+t._s(t.$store.getters.userName||"用户")+" ")]),e("div",{staticClass:"user-email"},[t._v(t._s(t.$store.getters.userEmail))])])]),e("van-cell-group",[t.isMainAccount?e("van-cell",{attrs:{title:"子账户管理",icon:"friends-o","is-link":""},on:{click:t.openSubAccountManage}}):t._e(),e("van-cell",{attrs:{title:"退出登录",icon:"exit","is-link":""},on:{click:t.handleLogout}})],1)],1)]),e("van-popup",{style:{height:"60%"},attrs:{position:"bottom"},model:{value:t.showSubAccountManage,callback:function(e){t.showSubAccountManage=e},expression:"showSubAccountManage"}},[e("div",{staticClass:"sub-account-manage-popup"},[e("div",{staticClass:"popup-header"},[e("van-button",{attrs:{plain:""},on:{click:function(e){t.showSubAccountManage=!1}}},[t._v("关闭")]),e("h3",[t._v("子账户管理")]),e("van-button",{attrs:{type:"primary"},on:{click:t.openAddSubAccount}},[t._v("邀请")])],1),e("div",{staticClass:"popup-content"},[e("div",{staticClass:"section main-account-section"},[e("h4",{staticClass:"section-title"},[e("van-icon",{attrs:{name:"manager-o"}}),t._v(" 主账户信息 ")],1),e("div",{staticClass:"main-account-info"},[e("div",{staticClass:"account-avatar"},[e("van-icon",{attrs:{name:"manager-o",size:"40"}})],1),e("div",{staticClass:"account-details"},[e("div",{staticClass:"account-name"},[t._v(" "+t._s(t.$store.getters.userName||"主账户")+" ")]),e("div",{staticClass:"account-email"},[t._v(" "+t._s(t.$store.getters.userEmail)+" ")]),e("div",{staticClass:"account-status"},[e("van-tag",{attrs:{type:"primary",size:"mini"}},[t._v("主账户")]),e("span",{staticClass:"sub-count"},[t._v(t._s(t.subAccounts.length)+" 个子账户")])],1)])])]),e("div",{staticClass:"section"},[e("h4",{staticClass:"section-title"},[e("van-icon",{attrs:{name:"friends-o"}}),t._v(" 已确认的子账户 ("+t._s(t.subAccounts.length)+") ")],1),0===t.subAccounts.length?e("div",{staticClass:"empty-hint"},[e("van-empty",{attrs:{image:"network",description:"暂无已确认的子账户"}})],1):e("van-cell-group",t._l(t.subAccounts,function(a){return e("van-cell",{key:a.email,attrs:{title:a.nickname||a.email.split("@")[0],label:a.email,value:"已确认"},scopedSlots:t._u([{key:"right-icon",fn:function(){return[e("van-button",{attrs:{type:"danger",size:"mini"},on:{click:function(e){return t.deleteSubAccount(a.email)}}},[t._v(" 删除 ")])]},proxy:!0}],null,!0)})}),1)],1),e("div",{staticClass:"section"},[e("h4",{staticClass:"section-title"},[e("van-icon",{attrs:{name:"send-gift-o"}}),t._v(" 待处理邀请 ("+t._s(t.pendingInvitations.length)+") ")],1),0===t.pendingInvitations.length?e("div",{staticClass:"empty-hint"},[e("van-empty",{attrs:{image:"network",description:"暂无待处理邀请"}})],1):e("van-cell-group",t._l(t.pendingInvitations,function(a){return e("van-cell",{key:a.email,attrs:{title:a.email.split("@")[0],label:a.email,value:`已发送 (${t.formatInviteDate(a.invitedAt)})`},scopedSlots:t._u([{key:"icon",fn:function(){return[e("van-icon",{attrs:{name:"clock-o"}})]},proxy:!0},{key:"right-icon",fn:function(){return[e("van-button",{attrs:{type:"warning",size:"mini"},on:{click:function(e){return t.cancelInvitation(a.email)}}},[t._v(" 取消 ")])]},proxy:!0}],null,!0)})}),1)],1)])])]),e("van-popup",{style:{height:"40%"},attrs:{position:"bottom"},model:{value:t.showAddSubAccount,callback:function(e){t.showAddSubAccount=e},expression:"showAddSubAccount"}},[e("div",{staticClass:"add-sub-account-popup"},[e("div",{staticClass:"popup-header"},[e("van-button",{attrs:{plain:""},on:{click:function(e){t.showAddSubAccount=!1}}},[t._v("取消")]),e("h3",[t._v("邀请子账户")]),e("van-button",{attrs:{type:"primary",loading:t.subAccountSubmitting},on:{click:t.addSubAccount}},[t._v(" 发送邀请 ")])],1),e("div",{staticClass:"popup-content"},[e("van-cell-group",[e("van-field",{attrs:{label:"邮箱地址",placeholder:"请输入要邀请的邮箱地址",type:"email",required:""},model:{value:t.newSubAccountEmail,callback:function(e){t.newSubAccountEmail=e},expression:"newSubAccountEmail"}})],1),e("div",{staticClass:"tip-text"},[e("p",[t._v("• 系统将向该邮箱发送邀请链接")]),e("p",[t._v("• 对方需要点击邮件中的链接确认接受邀请")]),e("p",[t._v("• 邀请链接7天内有效")]),e("p",[t._v("• 接受邀请后，对方将成为您的子账户")]),e("p",[t._v("• 子账户将拥有与主账户相同的权限")])])],1)])])],1)])},n=[],r=(a(5639),a(1406)),c=a(2368),l=a.n(c),d=function(){var t=this,e=t._self._c;return e("div",{staticClass:"date-navigator"},[e("div",{staticClass:"date-nav-ultra-compact"},[e("van-button",{staticClass:"nav-btn-mini",attrs:{icon:"arrow-left",size:"mini",type:"default",plain:"",disabled:!t.canGoPrevious},on:{click:t.previousDay}}),e("van-button",{staticClass:"today-btn-mini",attrs:{size:"mini",type:t.isCurrentToday?"primary":"default",plain:!t.isCurrentToday},on:{click:t.goToToday}},[t._v(" 今天 ")]),e("div",{staticClass:"current-date-ultra",on:{click:function(e){t.showDatePicker=!0}}},[e("div",{staticClass:"date-info"},[e("span",{staticClass:"date-text"},[t._v(t._s(t.formatDisplayDate(t.currentDate)))]),e("span",{staticClass:"weekday"},[t._v("("+t._s(t.getWeekday(t.currentDate))+")")])]),e("van-icon",{staticClass:"dropdown-icon",attrs:{name:"arrow-down",size:"12"}})],1),e("van-button",{staticClass:"nav-btn-mini",attrs:{icon:"arrow",size:"mini",type:"default",plain:"",disabled:!t.canGoNext},on:{click:t.nextDay}})],1),e("van-popup",{attrs:{position:"bottom"},model:{value:t.showDatePicker,callback:function(e){t.showDatePicker=e},expression:"showDatePicker"}},[e("van-datetime-picker",{attrs:{type:"date",title:"选择日期","min-date":t.minDate,"max-date":t.maxDate},on:{confirm:t.onDateConfirm,cancel:function(e){t.showDatePicker=!1}},model:{value:t.pickerDate,callback:function(e){t.pickerDate=e},expression:"pickerDate"}})],1),e("van-popup",{style:{height:"60%"},attrs:{position:"bottom"},model:{value:t.showCalendar,callback:function(e){t.showCalendar=e},expression:"showCalendar"}},[e("van-calendar",{attrs:{"min-date":t.minDate,"max-date":t.maxDate},on:{confirm:t.onCalendarConfirm,close:function(e){t.showCalendar=!1}},model:{value:t.calendarDate,callback:function(e){t.calendarDate=e},expression:"calendarDate"}})],1)],1)},u=[],h={name:"DateNavigator",props:{allowFuture:{type:Boolean,default:!0},allowPast:{type:Boolean,default:!0}},data(){return{showDatePicker:!1,showCalendar:!1,pickerDate:new Date,calendarDate:new Date,minDate:l()().subtract(1,"year").toDate(),maxDate:l()().add(1,"year").toDate()}},computed:{...(0,r.aH)(["currentDate"]),canGoPrevious(){if(!this.allowPast)return!1;const t=l()(this.currentDate).subtract(1,"day");return t.isAfter(l()(this.minDate))},canGoNext(){if(!this.allowFuture)return!1;const t=l()(this.currentDate).add(1,"day");return t.isBefore(l()(this.maxDate))},isYesterday(){const t=l()().subtract(1,"day").format("YYYY-MM-DD");return this.currentDate===t},isTomorrow(){const t=l()().add(1,"day").format("YYYY-MM-DD");return this.currentDate===t},isCurrentToday(){const t=l()().format("YYYY-MM-DD");return this.currentDate===t}},methods:{formatDisplayDate(t){const e=l()(t),a=l()();return e.isSame(a,"day")?"今天":e.isSame(a.subtract(1,"day"),"day")?"昨天":e.isSame(a.add(1,"day"),"day")?"明天":e.format("MM月DD日")},getWeekday(t){const e=["周日","周一","周二","周三","周四","周五","周六"];return e[l()(t).day()]},isToday(t){return l()(t).isSame(l()(),"day")},async previousDay(){if(this.canGoPrevious){const t=l()(this.currentDate).subtract(1,"day").format("YYYY-MM-DD");await this.$store.dispatch("changeDate",t)}},async nextDay(){if(this.canGoNext){const t=l()(this.currentDate).add(1,"day").format("YYYY-MM-DD");await this.$store.dispatch("changeDate",t)}},async goToToday(){const t=l()().format("YYYY-MM-DD");await this.$store.dispatch("changeDate",t)},async onDateConfirm(t){const e=l()(t).format("YYYY-MM-DD");await this.$store.dispatch("changeDate",e),this.showDatePicker=!1},async onCalendarConfirm(t){const e=l()(t).format("YYYY-MM-DD");await this.$store.dispatch("changeDate",e),this.showCalendar=!1}}},p=h,m=a(5229),v=(0,m.A)(p,d,u,!1,null,"45a51008",null),k=v.exports,f=function(){var t=this,e=t._self._c;return e("div",{staticClass:"task-item",class:{completed:t.localTask.isCompleted,readonly:t.readonly}},[e("van-cell",{scopedSlots:t._u([{key:"icon",fn:function(){return[e("van-checkbox",{attrs:{disabled:t.readonly,"checked-color":"#1989fa"},on:{change:t.onToggleComplete},model:{value:t.localTask.isCompleted,callback:function(e){t.$set(t.localTask,"isCompleted",e)},expression:"localTask.isCompleted"}})]},proxy:!0},{key:"title",fn:function(){return[e("div",{staticClass:"task-content"},[e("div",{staticClass:"task-title",class:{completed:t.localTask.isCompleted}},[t._v(" "+t._s(t.localTask.title)+" ")]),t.localTask.description?e("div",{staticClass:"task-description"},[t._v(" "+t._s(t.localTask.description)+" ")]):t._e(),e("div",{staticClass:"task-meta"},[e("van-tag",{attrs:{color:t.getSubjectColor(t.localTask.subject),size:"mini",plain:""}},[t._v(" "+t._s(t.localTask.subject)+" ")]),t.localTask.deadline?e("span",{staticClass:"deadline"},[e("van-icon",{attrs:{name:"clock-o"}}),t._v(" "+t._s(t.formatDeadline(t.localTask.deadline))+" ")],1):t._e(),t.localTask.completedAt?e("span",{staticClass:"completed-time"},[e("van-icon",{attrs:{name:"checked"}}),t._v(" "+t._s(t.formatCompletedTime(t.localTask.completedAt))+" ")],1):t._e()],1)])]},proxy:!0},t.readonly?null:{key:"right-icon",fn:function(){return[e("van-icon",{staticClass:"task-actions",attrs:{name:"ellipsis"},on:{click:function(e){t.showActionSheet=!0}}})]},proxy:!0}],null,!0)}),e("van-action-sheet",{attrs:{actions:t.actions,"cancel-text":"取消"},on:{select:t.onActionSelect},model:{value:t.showActionSheet,callback:function(e){t.showActionSheet=e},expression:"showActionSheet"}}),e("van-popup",{style:{height:"60%"},attrs:{position:"bottom"},model:{value:t.showEditTask,callback:function(e){t.showEditTask=e},expression:"showEditTask"}},[e("div",{staticClass:"edit-task-popup"},[e("div",{staticClass:"popup-header"},[e("van-button",{attrs:{plain:""},on:{click:function(e){t.showEditTask=!1}}},[t._v("取消")]),e("h3",[t._v("编辑任务")]),e("van-button",{attrs:{type:"primary",loading:t.saving},on:{click:t.onSaveEdit}},[t._v("保存")])],1),e("div",{staticClass:"popup-content"},[e("van-cell-group",[e("van-field",{attrs:{label:"任务标题",placeholder:"请输入任务标题",required:""},model:{value:t.editForm.title,callback:function(e){t.$set(t.editForm,"title",e)},expression:"editForm.title"}}),e("van-field",{attrs:{label:"任务描述",placeholder:"请输入任务描述（可选）",type:"textarea",rows:"2"},model:{value:t.editForm.description,callback:function(e){t.$set(t.editForm,"description",e)},expression:"editForm.description"}}),e("van-field",{attrs:{label:"选择科目",placeholder:"请选择科目",readonly:"","is-link":""},on:{click:t.onEditSubjectFieldClick},model:{value:t.editForm.subject,callback:function(e){t.$set(t.editForm,"subject",e)},expression:"editForm.subject"}}),e("van-field",{attrs:{label:"截止时间",placeholder:"请选择截止时间",readonly:""},on:{click:function(e){t.showEditDatePicker=!0}},model:{value:t.editForm.deadline,callback:function(e){t.$set(t.editForm,"deadline",e)},expression:"editForm.deadline"}})],1)],1)])]),e("van-popup",{attrs:{position:"bottom"},model:{value:t.showEditDatePicker,callback:function(e){t.showEditDatePicker=e},expression:"showEditDatePicker"}},[e("van-datetime-picker",{attrs:{type:"datetime",title:"选择截止时间"},on:{confirm:t.onEditDateConfirm,cancel:function(e){t.showEditDatePicker=!1}},model:{value:t.editPickerDate,callback:function(e){t.editPickerDate=e},expression:"editPickerDate"}})],1),e("van-popup",{attrs:{position:"bottom"},model:{value:t.showEditSubjectPicker,callback:function(e){t.showEditSubjectPicker=e},expression:"showEditSubjectPicker"}},[e("van-picker",{attrs:{columns:t.subjects,title:"选择科目","show-toolbar":""},on:{confirm:t.onEditSubjectConfirm,cancel:t.onEditSubjectCancel}})],1)],1)},y=[],g=a(2479),w={name:"TaskItem",props:{task:{type:Object,required:!0},readonly:{type:Boolean,default:!1}},data(){return{localTask:{...this.task},showActionSheet:!1,showEditTask:!1,showEditDatePicker:!1,showEditSubjectPicker:!1,saving:!1,editPickerDate:new Date,editForm:{title:"",description:"",subject:"",deadline:""}}},computed:{...(0,r.aH)(["subjects"]),actions(){return[{name:"编辑任务",color:"#1989fa"},{name:"删除任务",color:"#ee0a24"}]}},watch:{task:{handler(t){this.localTask={...t}},deep:!0,immediate:!0}},methods:{async onToggleComplete(t){if(t&&"数学"===this.task.subject)try{await this.$dialog.confirm({title:"确认完成",message:"你确认已经全部检查过吗？",confirmButtonText:"确定",cancelButtonText:"取消"})}catch(a){return void(this.localTask.isCompleted=!1)}const e={isCompleted:t,completedAt:t?(new Date).toISOString():null};this.$emit("update",this.task._id,e)},onActionSelect(t){"编辑任务"===t.name?this.openEditTask():"删除任务"===t.name&&this.$emit("delete",this.task._id),this.showActionSheet=!1},openEditTask(){this.editForm={title:this.task.title,description:this.task.description||"",subject:this.task.subject,deadline:this.task.deadline||""},this.showEditTask=!0},async onSaveEdit(){if(this.editForm.title.trim())try{this.saving=!0;const t={title:this.editForm.title,description:this.editForm.description,subject:this.editForm.subject,deadline:this.editForm.deadline};this.$emit("update",this.task._id,t),this.showEditTask=!1}catch(t){this.$toast.fail("保存失败: "+t.message)}finally{this.saving=!1}else this.$toast.fail("请输入任务标题")},onEditDateConfirm(t){this.editForm.deadline=l()(t).format("YYYY-MM-DD HH:mm"),this.showEditDatePicker=!1},onEditSubjectFieldClick(){this.showEditSubjectPicker=!0},onEditSubjectConfirm(t){this.editForm.subject=t,this.showEditSubjectPicker=!1},onEditSubjectCancel(){this.showEditSubjectPicker=!1},getSubjectColor:g._o,formatDeadline(t){return t?l()(t).format("MM-DD HH:mm"):""},formatCompletedTime(t){return t?l()(t).format("HH:mm完成"):""}}},b=w,A=(0,m.A)(b,f,y,!1,null,"14158fe5",null),T=A.exports,S=function(){var t=this,e=t._self._c;return e("van-overlay",{staticClass:"reward-overlay",attrs:{show:t.visible},on:{click:t.handleClose}},[e("div",{staticClass:"reward-modal",on:{click:function(t){t.stopPropagation()}}},[e("van-icon",{staticClass:"close-btn",attrs:{name:"cross"},on:{click:t.handleClose}}),e("div",{staticClass:"reward-content",class:t.rewardType},[e("div",{staticClass:"reward-icon"},["subject"===t.rewardType?e("div",{staticClass:"flower-container"},[e("svg",{staticClass:"flower-icon",attrs:{viewBox:"0 0 100 100",xmlns:"http://www.w3.org/2000/svg"}},[e("defs",[e("linearGradient",{attrs:{id:"flowerGradient",x1:"0%",y1:"0%",x2:"100%",y2:"100%"}},[e("stop",{staticStyle:{"stop-color":"#ff6b6b"},attrs:{offset:"0%"}}),e("stop",{staticStyle:{"stop-color":"#ff3838"},attrs:{offset:"100%"}})],1)],1),e("circle",{attrs:{cx:"50",cy:"30",r:"12",fill:"url(#flowerGradient)",opacity:"0.9"}}),e("circle",{attrs:{cx:"70",cy:"50",r:"12",fill:"url(#flowerGradient)",opacity:"0.9"}}),e("circle",{attrs:{cx:"50",cy:"70",r:"12",fill:"url(#flowerGradient)",opacity:"0.9"}}),e("circle",{attrs:{cx:"30",cy:"50",r:"12",fill:"url(#flowerGradient)",opacity:"0.9"}}),e("circle",{attrs:{cx:"62",cy:"35",r:"10",fill:"url(#flowerGradient)",opacity:"0.8"}}),e("circle",{attrs:{cx:"65",cy:"65",r:"10",fill:"url(#flowerGradient)",opacity:"0.8"}}),e("circle",{attrs:{cx:"38",cy:"65",r:"10",fill:"url(#flowerGradient)",opacity:"0.8"}}),e("circle",{attrs:{cx:"35",cy:"35",r:"10",fill:"url(#flowerGradient)",opacity:"0.8"}}),e("circle",{attrs:{cx:"50",cy:"50",r:"8",fill:"#ffd93d"}})])]):e("div",{staticClass:"trophy-container"},[e("svg",{staticClass:"trophy-icon",attrs:{viewBox:"0 0 100 100",xmlns:"http://www.w3.org/2000/svg"}},[e("defs",[e("linearGradient",{attrs:{id:"trophyGradient",x1:"0%",y1:"0%",x2:"100%",y2:"100%"}},[e("stop",{staticStyle:{"stop-color":"#ffd93d"},attrs:{offset:"0%"}}),e("stop",{staticStyle:{"stop-color":"#ff9500"},attrs:{offset:"100%"}})],1)],1),e("path",{attrs:{d:"M35 25 L65 25 L60 55 L40 55 Z",fill:"url(#trophyGradient)"}}),e("rect",{attrs:{x:"30",y:"55",width:"40",height:"8",fill:"#d4af37"}}),e("rect",{attrs:{x:"25",y:"63",width:"50",height:"6",fill:"#b8941f"}}),e("path",{attrs:{d:"M20 30 Q15 35 15 45 Q15 55 20 50",stroke:"#d4af37","stroke-width":"3",fill:"none"}}),e("path",{attrs:{d:"M80 30 Q85 35 85 45 Q85 55 80 50",stroke:"#d4af37","stroke-width":"3",fill:"none"}}),e("circle",{attrs:{cx:"50",cy:"35",r:"3",fill:"#ff9500"}}),e("rect",{attrs:{x:"40",y:"40",width:"20",height:"2",fill:"#ff9500"}}),e("rect",{attrs:{x:"42",y:"45",width:"16",height:"2",fill:"#ff9500"}})])])]),e("div",{staticClass:"reward-text"},[e("h2",{staticClass:"reward-title"},[t._v(t._s(t.rewardTitle))]),e("p",{staticClass:"reward-message"},[t._v(t._s(t.rewardMessage))]),t.subjectName?e("div",{staticClass:"subject-name"},[t._v(" "+t._s(t.subjectName)+"科目完成！ ")]):t._e()]),e("van-button",{staticClass:"reward-button",attrs:{type:"primary",color:t.buttonColor},on:{click:t.handleClose}},[t._v(" "+t._s(t.buttonText)+" ")])],1),e("div",{staticClass:"reward-bg-effects"},t._l(12,function(a){return e("div",{key:a,staticClass:"floating-particle",class:t.rewardType,style:t.getParticleStyle(a)})}),0)],1)])},C=[],_={name:"RewardModal",props:{visible:{type:Boolean,default:!1},type:{type:String,default:"subject",validator:t=>["subject","all"].includes(t)},subjectName:{type:String,default:""}},watch:{visible(t){}},computed:{rewardType(){return this.type},rewardTitle(){return"哇，你真棒！"},rewardMessage(){return"subject"===this.type?"继续下一个项目吧":"已经完成了今天的全部任务，去喝口水休息一下吧"},buttonText(){return"subject"===this.type?"继续加油":"好的"},buttonColor(){return"subject"===this.type?"#ff6b6b":"#ffd93d"}},methods:{handleClose(){this.$emit("close")},getParticleStyle(t){const e=.2*t,a=4+6*Math.random(),s=10+80*Math.random(),o=2+2*Math.random();return{left:`${s}%`,animationDelay:`${e}s`,animationDuration:`${o}s`,width:`${a}px`,height:`${a}px`}}}},D=_,E=(0,m.A)(D,S,C,!1,null,"d860c48a",null),x=E.exports,j=a(7939),$={name:"TaskBoard",components:{DateNavigator:k,TaskItem:T,RewardModal:x},props:{date:{type:String,default:null}},data(){return{refreshing:!1,showAddTask:!1,showDatePicker:!1,showSubjectPicker:!1,showUserMenu:!1,showSubAccountManage:!1,showAddSubAccount:!1,submitting:!1,subAccountSubmitting:!1,pickerDate:new Date,newSubAccountEmail:"",subAccounts:[],pendingInvitations:[],newTask:{title:"",description:"",subject:"语文",deadline:""},isScrolled:!1,showRewardModal:!1,rewardType:"subject",completedSubjectName:"",previousSubjectStats:{},previousTotalCompletion:!1}},computed:{...(0,r.aH)(["loading","subjects","currentDate"]),...(0,r.L8)(["currentTasks","isToday","currentTasksStats","tasksBySubject","subjectStats"]),navTitle(){return this.isToday?"今日任务":l()(this.currentDate).format("MM月DD日任务")},activeSubjectStats(){const t={};for(const e in this.subjectStats){const a=this.subjectStats[e];a.total>0&&(t[e]=a)}return t},isMainAccount(){const t=this.$store.getters.currentUser;return!t||"sub"!==t.accountType},shouldShowPivot(){return this.currentTasksStats.percentage&&this.currentTasksStats.percentage<95},progressPivotText(){return this.currentTasksStats.completed||this.currentTasksStats.total?`${this.currentTasksStats.completed}/${this.currentTasksStats.total}`:"0/0"}},async created(){this.$store.state.isLoggedIn?this.date&&this.date!==this.currentDate?await this.$store.dispatch("changeDate",this.date):await this.$store.dispatch("loadTasks"):console.warn("⚠️ 用户未登录，跳过任务加载")},mounted(){window.addEventListener("scroll",this.handleScroll)},beforeDestroy(){window.removeEventListener("scroll",this.handleScroll)},watch:{async date(t){t&&t!==this.currentDate&&await this.$store.dispatch("changeDate",t)},activeSubjectStats:{handler(t,e){this.isToday&&t&&this.checkSubjectCompletion(t,e||{})},deep:!0,immediate:!1},currentTasksStats:{handler(t){this.isToday&&t&&this.checkTotalCompletion(t)},immediate:!1}},methods:{handleScroll(){this.isScrolled=window.scrollY>10},onBack(){if(this.isToday)return;const t=this.$route.path;"/tasks"!==t&&this.$router.push("/tasks").catch(t=>{if("NavigationDuplicated"!==t.name)throw t})},async onRefresh(){try{this.$store.commit("SET_TASKS_CACHE",{date:this.currentDate,tasks:[]}),await this.$store.dispatch("loadTasks")}catch(t){this.$toast.fail("刷新失败: "+t.message)}finally{this.refreshing=!1}},async onUpdateTask(t,e){try{await this.$store.dispatch("updateTask",{taskId:t,updates:e}),setTimeout(()=>{this.$toast.success("任务已更新")},300)}catch(a){}},async onDeleteTask(t){try{await this.$dialog.confirm({title:"确认删除",message:"确定要删除这个任务吗？"}),await this.$store.dispatch("deleteTask",{taskId:t,date:this.currentDate}),setTimeout(()=>{this.$toast.success("任务已删除")},300)}catch(e){}},async onAddTask(){if(this.newTask.title.trim())try{this.submitting=!0;const t={...this.newTask,date:this.currentDate,isCompleted:!1};await this.$store.dispatch("createTask",t),setTimeout(()=>{this.$toast.success("任务添加成功")},300),this.showAddTask=!1,this.resetNewTask()}catch(t){}finally{this.submitting=!1}else this.$toast.fail("请输入任务标题")},onDateConfirm(t){this.newTask.deadline=l()(t).format("YYYY-MM-DD HH:mm"),this.showDatePicker=!1},onSubjectFieldClick(){this.showSubjectPicker=!0},onSubjectConfirm(t){this.newTask.subject=t,this.showSubjectPicker=!1},onSubjectCancel(){this.showSubjectPicker=!1},resetNewTask(){this.newTask={title:"",description:"",subject:"语文",deadline:""}},checkSubjectCompletion(t,e){for(const a in t){const s=t[a],o=e[a]||{percentage:0};if(100===s.percentage&&o.percentage<100){100===this.currentTasksStats.percentage?this.showAllCompleteReward():this.showSubjectReward(a);break}}},checkTotalCompletion(t){this.previousTotalCompletion=100===t.percentage},showSubjectReward(t){this.showRewardModal||(this.rewardType="subject",this.completedSubjectName=t,this.showRewardModal=!0)},showAllCompleteReward(){this.showRewardModal||(this.rewardType="all",this.completedSubjectName="",this.showRewardModal=!0)},onCloseRewardModal(){this.showRewardModal=!1,setTimeout(()=>{this.rewardType="subject",this.completedSubjectName=""},500)},gotoChatbot(){this.$router.push("/chatbot")},isTaskReadonly(t){if(this.isToday)return!1;if(!t.deadline)return!0;const e=l()(),a=l()(t.deadline);return a.isBefore(e)},getSubjectColor:g._o,getSubjectIcon:g.c1,async handleLogout(){this.$dialog.confirm({title:"退出登录",message:"确定要退出登录吗？这将清除所有本地缓存数据。"}).then(async()=>{try{const t=this.$toast.loading({message:"正在退出登录...",forbidClick:!0,duration:0});await this.$store.dispatch("logout"),this.showUserMenu=!1,this.showSubAccountManage=!1,this.showAddSubAccount=!1,this.showAddTask=!1,this.subAccounts=[],this.pendingInvitations=[],this.newSubAccountEmail="",t.close(),this.$toast.success("退出登录成功，本地数据已清除"),setTimeout(()=>{this.$router.push("/login")},500)}catch(t){console.error("退出登录失败:",t),this.$toast.fail("退出登录失败: "+(t.message||"未知错误"))}}).catch(()=>{})},async loadSubAccounts(){try{const t=await j.Ay.get("/user/sub-accounts");this.subAccounts=t.data||[]}catch(t){console.error("获取子账户列表失败:",t),this.$toast.fail("获取子账户列表失败")}},async loadPendingInvitations(){try{const t=await j.Ay.get("/user/pending-invitations");this.pendingInvitations=t.data||[]}catch(t){console.error("获取邀请列表失败:",t),this.$toast.fail("获取邀请列表失败")}},async openSubAccountManage(){this.showUserMenu=!1,this.showSubAccountManage=!0,await this.loadSubAccounts(),await this.loadPendingInvitations()},openAddSubAccount(){this.newSubAccountEmail="",this.showAddSubAccount=!0},async addSubAccount(){if(!this.newSubAccountEmail.trim())return void this.$toast.fail("请输入邮箱地址");const t=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;if(t.test(this.newSubAccountEmail))try{this.subAccountSubmitting=!0,await j.Ay.post("/user/invite-sub-account",{email:this.newSubAccountEmail}),this.$toast.success("邀请发送成功，请通知对方查收邮件"),this.showAddSubAccount=!1,this.newSubAccountEmail="",await this.loadPendingInvitations()}catch(e){console.error("发送邀请失败:",e),this.$toast.fail(e.response?.data?.message||"发送邀请失败")}finally{this.subAccountSubmitting=!1}else this.$toast.fail("请输入有效的邮箱地址")},async cancelInvitation(t){try{await this.$dialog.confirm({title:"确认取消",message:`确定要取消对 ${t} 的邀请吗？`}),await j.Ay.delete(`/user/pending-invitations/${encodeURIComponent(t)}`),this.$toast.success("邀请已取消"),await this.loadPendingInvitations()}catch(e){"cancel"!==e&&(console.error("取消邀请失败:",e),this.$toast.fail(e.response?.data?.message||"取消邀请失败"))}},async deleteSubAccount(t){try{await this.$dialog.confirm({title:"确认删除",message:`确定要删除子账户 ${t} 吗？删除后对方将无法再访问共享任务。`}),await j.Ay.delete(`/user/sub-accounts/${encodeURIComponent(t)}`),this.$toast.success("子账户删除成功"),await this.loadSubAccounts()}catch(e){"cancel"!==e&&(console.error("删除子账户失败:",e),this.$toast.fail(e.response?.data?.message||"删除子账户失败"))}},formatInviteDate(t){return l()(t).format("MM-DD HH:mm")}}},I=$,P=(0,m.A)(I,i,n,!1,null,"a8639c8e",null),M=P.exports,U=a(1821);s.Ay.use(o.Ay);const N=[{path:"/",name:"Home",redirect:"/tasks"},{path:"/login",name:"Login",component:()=>a.e(413).then(a.bind(a,413)),meta:{title:"登录",requiresGuest:!0}},{path:"/tasks",name:"TaskBoard",component:M,meta:{title:"每日任务",keepAlive:!0,requiresAuth:!0}},{path:"/tasks/:date",name:"TaskBoardWithDate",component:M,props:!0,meta:{title:"历史任务",keepAlive:!0,requiresAuth:!0}},{path:"/calendar",name:"Calendar",component:()=>a.e(115).then(a.bind(a,9115)),meta:{title:"任务日历",requiresAuth:!0}},{path:"/stats",name:"Statistics",component:()=>a.e(218).then(a.bind(a,218)),meta:{title:"学习统计",requiresAuth:!0}},{path:"/chatbot",name:"Chatbot",component:()=>a.e(62).then(a.bind(a,5062)),meta:{title:"AI助手",requiresAuth:!0}},{path:"/accept-invitation",name:"AcceptInvitation",component:()=>a.e(328).then(a.bind(a,4328)),meta:{title:"接受邀请",requiresAuth:!1}}],L=new o.Ay({mode:"history",base:"/",routes:N});L.beforeEach(async(t,e,a)=>{t.meta.title&&(document.title=t.meta.title+" - 学生任务管理");const s=t.matched.some(t=>t.meta.requiresAuth),o=t.matched.some(t=>t.meta.requiresGuest);if(!U.A.state.appInitialized){console.log("等待应用初始化完成...");let t=0;const e=50;while(!U.A.state.appInitialized&&t<e)await new Promise(t=>setTimeout(t,100)),t++;U.A.state.appInitialized||console.warn("应用初始化超时，继续执行路由守卫")}const i=U.A.state.isLoggedIn;if(s&&!i)return console.log("需要登录，重定向到登录页"),void a({path:"/login",query:{redirect:t.fullPath}});if(o&&i)return console.log("已登录，重定向到首页"),void a("/");if(i&&!U.A.state.user)try{await U.A.dispatch("checkAuth")}catch(n){if(console.error("用户状态检查失败:",n),s)return void a({path:"/login",query:{redirect:t.fullPath}})}a()});var Y=L},1397:function(t,e,a){var s=a(7939);e.A={async getTasks(t){const e=await s.Ay.get("/tasks",{params:{date:t}});return e.data},async createTask(t){const e=await s.Ay.post("/tasks",t);return e.data},async updateTask(t,e){const a=await s.Ay.patch(`/tasks/${t}`,e);return a.data},async deleteTask(t){const e=await s.Ay.delete(`/tasks/${t}`);return e.data},async getCalendarData(t){const e=await s.Ay.get("/tasks/calendar",{params:{month:t}});return e.data},async getStats(t,e){const a=await s.Ay.get("/tasks/stats",{params:{start:t,end:e}});return a.data},async getStreak(){const t=await s.Ay.get("/tasks/streak");return t.data},async getStreakDays(){return this.getStreak()},async batchUpdate(t){const e=await s.Ay.patch("/tasks/batch",{updates:t});return e.data}}},1821:function(t,e,a){a.d(e,{A:function(){return p}});a(5639),a(9454),a(5010),a(1511);var s=a(6602),o=a(1406),i=a(2368),n=a.n(i),r=a(1397),c=a(7939);const l={async sendVerifyCode(t){return await c.Ay.post("/auth/send-code",{email:t})},async login(t,e){return await c.Ay.post("/auth/login",{email:t,code:e})},async getProfile(){return await c.Ay.get("/auth/profile")},async refreshToken(){return await c.Ay.post("/auth/refresh-token")},async logout(){return await c.Ay.post("/auth/logout")}};var d=l,u=a(2479);s.Ay.use(o.Ay);const h={TASKS_CACHE:"student_tasks_cache",CURRENT_DATE:"student_current_date",USER_INFO:"user_info",AUTH_TOKEN:"student_tasks_auth_token"};var p=new o.Ay.Store({state:{currentDate:n()().format("YYYY-MM-DD"),tasksCache:{},loading:!1,appInitialized:!1,stats:{weeklyStats:[],monthlyStats:[],streak:0},subjects:u.u0,user:null,isLoggedIn:!1,token:null},getters:{currentTasks:t=>t.tasksCache[t.currentDate]||[],isToday:t=>t.currentDate===n()().format("YYYY-MM-DD"),currentTasksStats:(t,e)=>{const a=e.currentTasks,s=a.length,o=a.filter(t=>t.isCompleted).length;return{total:s,completed:o,percentage:s>0?Math.round(o/s*100):0}},tasksBySubject:(t,e)=>{const a=e.currentTasks,s={};return t.subjects.forEach(t=>{s[t]=a.filter(e=>e.subject===t)}),s},subjectStats:(t,e)=>{const a=e.tasksBySubject,s={};return Object.keys(a).forEach(t=>{const e=a[t],o=e.length,i=e.filter(t=>t.isCompleted).length;o>0&&(s[t]={total:o,completed:i,percentage:Math.round(i/o*100)})}),s},currentUser:t=>t.user,userEmail:t=>t.user?.email||"",userName:t=>t.user?.nickname||t.user?.username||"",userAvatar:t=>t.user?.avatar||""},mutations:{SET_CURRENT_DATE(t,e){t.currentDate=e,localStorage.setItem(h.CURRENT_DATE,e)},SET_TASKS_CACHE(t,{date:e,tasks:a}){s.Ay.set(t.tasksCache,e,a),this.dispatch("saveTasksCache")},SET_LOADING(t,e){t.loading=e},SET_APP_INITIALIZED(t,e){t.appInitialized=e},UPDATE_TASK(t,{date:e,taskId:a,updates:s}){const o=t.tasksCache[e];if(o){const t=o.findIndex(t=>t._id===a);-1!==t&&(Object.assign(o[t],s),this.dispatch("saveTasksCache"))}},ADD_TASK(t,{date:e,task:a}){t.tasksCache[e]||s.Ay.set(t.tasksCache,e,[]),t.tasksCache[e].push(a),this.dispatch("saveTasksCache")},REMOVE_TASK(t,{date:e,taskId:a}){const s=t.tasksCache[e];if(s){const t=s.findIndex(t=>t._id===a);-1!==t&&(s.splice(t,1),this.dispatch("saveTasksCache"))}},SET_STATS(t,e){t.stats={...t.stats,...e}},SET_STREAK_DAYS(t,e){t.stats.streak=e},INIT_CACHE(t){try{const e=localStorage.getItem(h.TASKS_CACHE),a=localStorage.getItem(h.CURRENT_DATE),s=localStorage.getItem(h.USER_INFO),o=localStorage.getItem(h.AUTH_TOKEN);e&&(t.tasksCache=JSON.parse(e)),a&&(t.currentDate=a),s&&(t.user=JSON.parse(s)),o&&(t.token=o),(s||o)&&(t.isLoggedIn=!0)}catch(e){console.error("Failed to load cache:",e)}},SET_USER(t,e){t.user=e,t.isLoggedIn=!!e,e?localStorage.setItem(h.USER_INFO,JSON.stringify(e)):localStorage.removeItem(h.USER_INFO)},SET_TOKEN(t,e){t.token=e,e?localStorage.setItem(h.AUTH_TOKEN,e):localStorage.removeItem(h.AUTH_TOKEN)},CLEAR_AUTH(t){t.user=null,t.isLoggedIn=!1,t.token=null,t.tasksCache={},t.currentDate=n()().format("YYYY-MM-DD"),t.stats={weeklyStats:[],monthlyStats:[],streak:0},t.loading=!1,localStorage.removeItem(h.USER_INFO),localStorage.removeItem(h.AUTH_TOKEN),localStorage.removeItem(h.TASKS_CACHE),localStorage.removeItem(h.CURRENT_DATE),console.log("🧹 已清除所有用户相关的本地缓存")}},actions:{async initApp({commit:t,dispatch:e}){try{if(t("INIT_CACHE"),this.state.isLoggedIn)try{await e("checkAuth"),await e("loadTasks")}catch(a){console.error("用户状态检查失败:",a),t("CLEAR_AUTH")}}catch(a){console.error("应用初始化失败:",a)}finally{t("SET_LOADING",!1),t("SET_APP_INITIALIZED",!0)}},async changeDate({commit:t,dispatch:e},a){t("SET_CURRENT_DATE",a),await e("loadTasks")},async loadTasks({commit:t,state:e}){const a=e.currentDate;if(e.tasksCache[a]&&e.tasksCache[a].length>0)return console.log("📋 使用缓存数据:",a,e.tasksCache[a]),e.tasksCache[a];try{t("SET_LOADING",!0),console.log("🌐 从服务器加载数据:",a);const e=await r.A.getTasks(a);return t("SET_TASKS_CACHE",{date:a,tasks:e}),console.log("✅ 数据加载完成:",a,e),e}catch(s){throw console.error("Failed to load tasks:",s),s}finally{t("SET_LOADING",!1)}},async createTask({commit:t,dispatch:e},a){try{const e=await r.A.createTask(a);return t("ADD_TASK",{date:a.date,task:e}),e}catch(s){throw console.error("Failed to create task:",s),s}},async updateTask({commit:t,state:e},{taskId:a,updates:s}){try{const e=await r.A.updateTask(a,s),o=n()(e.date).format("YYYY-MM-DD");return t("UPDATE_TASK",{date:o,taskId:a,updates:e}),e}catch(o){throw console.error("Failed to update task:",o),o}},async deleteTask({commit:t},{taskId:e,date:a}){try{await r.A.deleteTask(e),t("REMOVE_TASK",{date:a,taskId:e})}catch(s){throw console.error("Failed to delete task:",s),s}},saveTasksCache({state:t}){try{localStorage.setItem(h.TASKS_CACHE,JSON.stringify(t.tasksCache))}catch(e){console.error("Failed to save tasks cache:",e)}},async loadStats({commit:t},{startDate:e,endDate:a}){try{const s=await r.A.getStats(e,a);return t("SET_STATS",s),s}catch(s){throw console.error("Failed to load stats:",s),s}},async fetchTaskStats({commit:t},{month:e}){try{const a=await r.A.getStats(e);return t("SET_TASK_STATS",a.data),a.data}catch(a){throw console.error("获取统计数据失败:",a),a}},async cleanupExpiredTasks({commit:t,dispatch:e}){},async fetchStreakDays({commit:t}){try{const e=await r.A.getStreakDays();return t("SET_STREAK_DAYS",e.data.streakDays),e.data.streakDays}catch(e){return console.error("获取连击数据失败:",e),0}},async batchUpdateTasks({commit:t},{updates:e}){try{const t=await r.A.batchUpdate(e);if(t.success)return t.data}catch(a){throw console.error("批量更新任务失败:",a),a}},async sendVerifyCode({commit:t},e){try{const t=await d.sendVerifyCode(e);return t.data}catch(a){throw console.error("发送验证码失败:",a),a}},async login({commit:t},{email:e,code:a}){try{const s=await d.login(e,a),{token:o,user:i}=s.data;return t("SET_TOKEN",o),t("SET_USER",i),s.data}catch(s){throw console.error("登录失败:",s),s}},async logout({commit:t}){try{return await d.logout(),t("CLEAR_AUTH"),!0}catch(e){throw console.error("退出登录失败:",e),t("CLEAR_AUTH"),e}},async checkAuth({commit:t,state:e}){try{if(!e.isLoggedIn)throw new Error("用户未登录");const a=await d.getProfile();return t("SET_USER",a.data),a.data}catch(a){throw console.error("检查用户状态失败:",a),t("CLEAR_AUTH"),a}},async getUserProfile({commit:t}){try{const e=await d.getProfile();return t("SET_USER",e.data),e.data}catch(e){throw console.error("获取用户信息失败:",e),e}}}})},2479:function(t,e,a){a.d(e,{_o:function(){return c},ad:function(){return i},c1:function(){return l},eq:function(){return o},jA:function(){return u},u0:function(){return s},xh:function(){return d}});const s=["语文","数学","英语","舞蹈","运动","阅读","编程","习惯养成","其他"],o={"语文":"#ff6b6b","数学":"#4ecdc4","英语":"#45b7d1","舞蹈":"#ff9ff3","运动":"#54a0ff","阅读":"#5f27cd","编程":"#00d2d3","习惯养成":"#ff9f43","其他":"#c7ecee"},i={"语文":"edit","数学":"calculator-o","英语":"chat-o","舞蹈":"music-o","运动":"play","阅读":"bookmark-o","编程":"desktop-o","习惯养成":"clock-o","其他":"bookmark"},n="#1989fa",r="bookmark-o";function c(t){return o[t]||n}function l(t){return i[t]||r}function d(t){return s.includes(t)}function u(t){return{name:t,color:c(t),icon:l(t),isValid:d(t)}}},3044:function(t,e,a){a(3597);var s=a(3851),o=(a(2976),a(9435)),i=(a(3382),a(4141)),n=(a(5293),a(6571)),r=(a(6549),a(1104)),c=(a(6635),a(6634)),l=(a(5596),a(5993)),d=(a(488),a(323)),u=(a(5534),a(9557)),h=(a(9999),a(7665)),p=(a(4566),a(813)),m=(a(7175),a(1270)),v=(a(9656),a(9441)),k=(a(776),a(2405)),f=(a(8045),a(8584)),y=(a(8862),a(7381)),g=(a(8417),a(6412)),w=(a(9583),a(5454)),b=(a(4601),a(2695)),A=(a(6334),a(5732)),T=(a(4587),a(9210)),S=(a(5651),a(9305)),C=(a(7950),a(1061)),_=(a(3679),a(7426)),D=(a(8014),a(4202)),E=(a(7040),a(9211)),x=(a(2966),a(7373)),j=(a(2337),a(4701)),$=(a(6595),a(351)),I=(a(3380),a(7138)),P=(a(8455),a(7334)),M=(a(9313),a(3260)),U=(a(9560),a(9331)),N=(a(8747),a(2289)),L=(a(175),a(2085)),Y=a(6602),R=function(){var t=this,e=t._self._c;return e("div",{class:{"with-tabbar":t.showTabbar},attrs:{id:"app"}},[e("router-view"),t.showTabbar?e("van-tabbar",{attrs:{fixed:""},on:{change:t.onTabChange},model:{value:t.activeTab,callback:function(e){t.activeTab=e},expression:"activeTab"}},[e("van-tabbar-item",{attrs:{icon:"calendar-o",name:"tasks"}},[t._v(" 今日任务 ")]),e("van-tabbar-item",{attrs:{icon:"apps-o",name:"calendar"}},[t._v(" 任务日历 ")]),e("van-tabbar-item",{attrs:{icon:"chart-trending-o",name:"stats"}},[t._v(" 学习统计 ")])],1):t._e(),e("van-overlay",{staticClass:"global-loading-overlay",attrs:{show:t.$store.state.loading}},[e("div",{staticClass:"global-loading-content"},[e("van-loading",{attrs:{color:"#1989fa",size:"50px","text-color":"#1989fa",vertical:""}},[t._v(" 请稍候... ")])],1)]),e("PWAInstallPrompt"),t.$isProduction?e("PWAUpdateManager"):t._e()],1)},H=[],W=(a(5639),function(){var t=this,e=t._self._c;return e("div",{staticClass:"pwa-update-manager"},[t.showUpdateButton?e("div",{staticClass:"update-fab",on:{click:t.handleUpdate}},[e("van-icon",{attrs:{name:"upgrade"}}),e("span",{staticClass:"update-text"},[t._v("更新")])],1):t._e(),e("van-overlay",{staticClass:"update-overlay",attrs:{show:t.updating}},[e("div",{staticClass:"update-progress"},[e("van-loading",{attrs:{type:"spinner",size:"24px"}}),e("p",[t._v("正在更新应用...")]),e("p",{staticClass:"progress-tip"},[t._v("请稍候，即将完成")])],1)]),e("van-popup",{style:{height:"50%"},attrs:{position:"bottom",round:""},model:{value:t.showVersionDialog,callback:function(e){t.showVersionDialog=e},expression:"showVersionDialog"}},[e("div",{staticClass:"version-dialog"},[e("div",{staticClass:"dialog-header"},[e("h3",[t._v("版本信息")]),e("van-icon",{attrs:{name:"cross"},on:{click:function(e){t.showVersionDialog=!1}}})],1),e("div",{staticClass:"version-content"},[e("div",{staticClass:"version-item"},[e("label",[t._v("当前版本：")]),e("span",[t._v(t._s(t.currentVersion))])]),e("div",{staticClass:"version-item"},[e("label",[t._v("缓存状态：")]),e("span",{class:t.cacheStatus.class},[t._v(t._s(t.cacheStatus.text))])]),e("div",{staticClass:"version-item"},[e("label",[t._v("离线状态：")]),e("span",{class:t.offlineStatus.class},[t._v(t._s(t.offlineStatus.text))])]),e("div",{staticClass:"version-item"},[e("label",[t._v("最后更新：")]),e("span",[t._v(t._s(t.lastUpdateTime))])])]),e("div",{staticClass:"action-buttons"},[e("van-button",{attrs:{type:"info",size:"small",loading:t.checkingUpdate},on:{click:t.checkForUpdates}},[t._v(" 检查更新 ")]),e("van-button",{attrs:{type:"warning",size:"small",loading:t.clearingCache},on:{click:t.clearCache}},[t._v(" 清理缓存 ")]),e("van-button",{attrs:{type:"default",size:"small"},on:{click:function(e){t.showUpdateHistory=!0}}},[t._v(" 更新历史 ")])],1)])]),e("van-popup",{style:{height:"60%"},attrs:{position:"bottom",round:""},model:{value:t.showUpdateHistory,callback:function(e){t.showUpdateHistory=e},expression:"showUpdateHistory"}},[e("div",{staticClass:"update-history"},[e("div",{staticClass:"dialog-header"},[e("h3",[t._v("更新历史")]),e("van-icon",{attrs:{name:"cross"},on:{click:function(e){t.showUpdateHistory=!1}}})],1),e("div",{staticClass:"history-list"},t._l(t.updateHistory,function(a,s){return e("div",{key:s,staticClass:"history-item"},[e("div",{staticClass:"history-version"},[t._v("v"+t._s(a.version))]),e("div",{staticClass:"history-date"},[t._v(t._s(t.formatDate(a.date)))]),e("div",{staticClass:"history-features"},t._l(a.features,function(a,s){return e("div",{key:s,staticClass:"feature-item"},[t._v(" • "+t._s(a)+" ")])}),0)])}),0)])])],1)}),O=[],F=(a(9454),a(8092),{name:"PWAUpdateManager",data(){return{showUpdateButton:!1,updating:!1,showVersionDialog:!1,showUpdateHistory:!1,checkingUpdate:!1,clearingCache:!1,currentVersion:"v1.0.0",lastUpdateTime:"刚刚",newWorker:null,registration:null,updateHistoryIndex:0,updateHistory:[{version:"1.0.0",date:new Date,features:["🎉 全新的PWA体验","📱 支持离线使用","🔄 智能更新机制","💾 数据本地缓存"]}]}},computed:{cacheStatus(){return"serviceWorker"in navigator&&navigator.serviceWorker.controller?{text:"已启用",class:"status-success"}:{text:"未启用",class:"status-error"}},offlineStatus(){return navigator.onLine?{text:"在线",class:"status-success"}:{text:"离线",class:"status-warning"}}},mounted(){this.initPWAManager(),this.loadUpdateHistory()},methods:{initPWAManager(){window.addEventListener("online",this.handleOnlineStatusChange),window.addEventListener("offline",this.handleOnlineStatusChange),"serviceWorker"in navigator&&navigator.serviceWorker.addEventListener("message",this.handleSWMessage)},handleOnlineStatusChange(){const t=navigator.onLine?"应用已连接网络":"应用已离线，部分功能可能受限";this.$toast({message:t,type:navigator.onLine?"success":"warning",duration:2e3})},handleSWMessage(t){const{type:e,data:a}=t.data||{};switch(e){case"SW_ACTIVATED":this.currentVersion=`v${a.version||"1.0.0"}`,this.lastUpdateTime="刚刚";break;case"UPDATE_AVAILABLE":this.showUpdateButton=!0,this.newWorker=a.worker;break}},showUpdatePrompt(t){this.newWorker=t,this.showUpdateButton=!0},async handleUpdate(){this.newWorker?this.$dialog.confirm({title:"应用更新",message:'\n          <div style="text-align: left; padding: 10px 0;">\n            <p>🚀 发现新版本可用！</p>\n            <p>📈 新版本包含性能优化和功能改进</p>\n            <br>\n            <p style="color: #666; font-size: 12px;">\n              💡 更新过程中会重新加载页面<br>\n              📝 请确保重要数据已保存\n            </p>\n          </div>\n        ',confirmButtonText:"立即更新",cancelButtonText:"稍后更新",dangerouslyUseHTMLString:!0}).then(()=>{this.performUpdate()}).catch(()=>{this.showUpdateButton=!1,setTimeout(()=>{this.showUpdateButton=!0},18e5)}):await this.checkForUpdates()},performUpdate(){this.updating=!0,this.showUpdateButton=!1,this.newWorker&&this.newWorker.postMessage({type:"SKIP_WAITING"}),navigator.serviceWorker.addEventListener("controllerchange",()=>{this.updating=!1,this.addUpdateHistory(),this.$toast.success({message:"更新完成！即将重新加载",duration:1500,onClose:()=>{window.location.reload()}})})},async checkForUpdates(){this.checkingUpdate=!0;try{if(!this.registration)throw new Error("Service Worker 未注册");await this.registration.update(),setTimeout(()=>{this.checkingUpdate=!1,this.$toast.success("已检查更新")},1e3)}catch(t){this.checkingUpdate=!1,this.$toast.fail("检查更新失败"),console.error("检查更新失败:",t)}},async clearCache(){try{if(await this.$dialog.confirm({title:"清理缓存",message:"确定要清理应用缓存吗？这将删除离线数据，需要重新下载资源。",confirmButtonText:"确定清理",cancelButtonText:"取消"}),this.clearingCache=!0,"serviceWorker"in navigator&&navigator.serviceWorker.controller){const t=new MessageChannel;t.port1.onmessage=t=>{this.clearingCache=!1,t.data.success?this.$toast.success("缓存清理完成"):this.$toast.fail("缓存清理失败")},navigator.serviceWorker.controller.postMessage({type:"CLEAR_CACHE"},[t.port2])}else{if("caches"in window){const t=await caches.keys();await Promise.all(t.map(t=>caches.delete(t)))}this.clearingCache=!1,this.$toast.success("缓存清理完成")}}catch(t){this.clearingCache=!1,"cancel"!==t&&(this.$toast.fail("缓存清理失败"),console.error("清理缓存失败:",t))}},addUpdateHistory(){const t={version:this.currentVersion.replace("v",""),date:new Date,features:["🐛 修复已知问题","⚡ 性能优化","🔧 体验改进"]};this.updateHistory.unshift(t),this.saveUpdateHistory()},loadUpdateHistory(){try{const t=localStorage.getItem("pwa_update_history");if(t){const e=JSON.parse(t);this.updateHistory=e.map(t=>({...t,date:new Date(t.date)}))}}catch(t){console.error("加载更新历史失败:",t)}},saveUpdateHistory(){try{localStorage.setItem("pwa_update_history",JSON.stringify(this.updateHistory))}catch(t){console.error("保存更新历史失败:",t)}},formatDate(t){const e=new Date,a=e-t,s=Math.floor(a/6e4),o=Math.floor(a/36e5),i=Math.floor(a/864e5);return s<1?"刚刚":s<60?`${s}分钟前`:o<24?`${o}小时前`:i<7?`${i}天前`:t.toLocaleDateString()},setRegistration(t){this.registration=t}},beforeDestroy(){window.removeEventListener("online",this.handleOnlineStatusChange),window.removeEventListener("offline",this.handleOnlineStatusChange),"serviceWorker"in navigator&&navigator.serviceWorker.removeEventListener("message",this.handleSWMessage)}}),B=F,G=a(5229),z=(0,G.A)(B,W,O,!1,null,"35bab6de",null),K=z.exports,V={name:"App",components:{PWAUpdateManager:K},data(){return{activeTab:"tasks"}},computed:{showTabbar(){const t=["/chatbot","/login","/accept-invitation"];return!t.includes(this.$route.path)},$isProduction(){return!0}},async created(){try{await this.$store.dispatch("initApp")}catch(t){console.error("App initialization failed:",t)}},methods:{onTabChange(t){const e={tasks:"/tasks",calendar:"/calendar",stats:"/stats"};this.$route.path!==e[t]&&this.$router.push(e[t])}},watch:{$route(t){t.path.startsWith("/tasks")?this.activeTab="tasks":"/calendar"===t.path?this.activeTab="calendar":"/stats"===t.path&&(this.activeTab="stats")}}},q=V,J=(0,G.A)(q,R,H,!1,null,null,null),Q=J.exports,Z=a(1396),X=a(1821);a(1670);const tt=()=>"vibrate"in navigator||"webkitVibrate"in navigator,et=t=>{try{if(tt()){if(navigator.vibrate)return navigator.vibrate(t);if(navigator.webkitVibrate)return navigator.webkitVibrate(t)}return!1}catch(e){return console.warn("触觉反馈执行失败:",e),!1}},at={light(){return et(20)},medium(){return et(50)},heavy(){return et([100,50,100])},success(){return et([50,30,50])},warning(){return et([80,40,80,40,80])},error(){return et([150,100,150])},custom(t){return et(t)},stop(){return et(0)},isSupported(){return tt()}},st={install(t){t.prototype.$haptic=at,t.haptic=at}};var ot=a(2479),it={methods:{getSubjectColor:ot._o,getSubjectIcon:ot.c1,getSubjectConfig:ot.jA,isValidSubject:ot.xh,formatSubjectName(t){return t||"未分类"},getSubjectStyle(t){const e=(0,ot._o)(t);return{color:e,backgroundColor:e+"20",borderColor:e}},getSubjectTagStyle(t){const e=(0,ot._o)(t);return{color:e,backgroundColor:e+"15",border:`1px solid ${e}40`}}},computed:{allSubjects(){return ot.u0},subjectColorMap(){return ot.eq},subjectIconMap(){return ot.ad}}},nt=function(){var t=this,e=t._self._c;return e("van-popup",{attrs:{position:"bottom"},model:{value:t.showPrompt,callback:function(e){t.showPrompt=e},expression:"showPrompt"}},[e("div",{staticClass:"pwa-install-prompt"},[e("div",{staticClass:"prompt-header"},[e("h3",[t._v("安装应用到主屏幕")]),e("van-icon",{attrs:{name:"cross"},on:{click:t.dismiss}})],1),e("p",[t._v("获得更快的访问和更好的体验")]),e("div",{staticClass:"actions"},[e("van-button",{on:{click:t.dismiss}},[t._v("稍后")]),e("van-button",{attrs:{type:"primary"},on:{click:t.install}},[t._v("安装")])],1)])])},rt=[],ct={name:"PWAInstallPrompt",data(){return{showPrompt:!1,deferredPrompt:null}},mounted(){window.addEventListener("beforeinstallprompt",t=>{t.preventDefault(),this.deferredPrompt=t,this.showPrompt=!0})},methods:{async install(){this.deferredPrompt&&(this.deferredPrompt.prompt(),await this.deferredPrompt.userChoice,this.deferredPrompt=null),this.showPrompt=!1},dismiss(){this.showPrompt=!1}}},lt=ct,dt=(0,G.A)(lt,nt,rt,!1,null,"422194c9",null),ut=dt.exports;async function ht(){try{const t=await navigator.serviceWorker.register("/sw.js");console.log("✅ Service Worker 注册成功:",t),pt(t),kt(),setInterval(()=>{t.update()},18e5)}catch(t){console.error("❌ Service Worker 注册失败:",t)}}function pt(t){t.addEventListener("updatefound",()=>{const e=t.installing;console.log("🔄 发现新版本 Service Worker"),e.addEventListener("statechange",()=>{"installed"===e.state&&(navigator.serviceWorker.controller?mt(e):console.log("🎉 Service Worker 首次安装完成"))})})}function mt(t){Y.Ay.prototype.$dialog.confirm({title:"发现新版本",message:'\n      <div style="text-align: left; padding: 10px 0;">\n        <p>🎉 应用有新版本可用！</p>\n        <p>📱 更新后将获得最新功能和性能优化</p>\n        <br>\n        <p style="color: #999; font-size: 12px;">💡 提示：更新会刷新页面，请确保数据已保存</p>\n      </div>\n    ',confirmButtonText:"立即更新",cancelButtonText:"稍后提醒",dangerouslyUseHTMLString:!0,showCancelButton:!0,lockScroll:!0,closeOnClickOverlay:!1}).then(()=>{vt(t)}).catch(()=>{setTimeout(()=>{"installed"===t.state&&mt(t)},6e5)})}function vt(t){const e=Y.Ay.prototype.$toast.loading({message:"正在更新应用...",forbidClick:!0,duration:0});t.postMessage({type:"SKIP_WAITING"}),navigator.serviceWorker.addEventListener("controllerchange",()=>{e.clear(),Y.Ay.prototype.$toast.success({message:"更新成功！即将重新加载页面",duration:1500,onClose:()=>{window.location.reload()}})})}function kt(){navigator.serviceWorker.addEventListener("message",t=>{const{type:e,data:a}=t.data||{};switch(e){case"SW_ACTIVATED":console.log(`🚀 Service Worker 已激活，版本: ${a?.version||"unknown"}`);break;case"SYNC_COMPLETE":Y.Ay.prototype.$toast.success("数据同步完成");break;case"CACHE_CLEARED":a?.success?Y.Ay.prototype.$toast.success("缓存清理完成"):Y.Ay.prototype.$toast.fail("缓存清理失败");break;default:console.log("收到未知 Service Worker 消息:",e,a)}})}Y.Ay.mixin(it),Y.Ay.use(st),Y.Ay.component("PWAInstallPrompt",ut),Y.Ay.use(L.A),Y.Ay.use(N.A),Y.Ay.use(U.A),Y.Ay.use(M.A),Y.Ay.use(P.A),Y.Ay.use(I.A),Y.Ay.use($.A),Y.Ay.use(j.A),Y.Ay.use(x.A),Y.Ay.use(E.A),Y.Ay.use(D.A),Y.Ay.use(_.A),Y.Ay.use(C.A),Y.Ay.use(S.A),Y.Ay.use(T.A),Y.Ay.use(A.A),Y.Ay.use(b.A),Y.Ay.use(w.A),Y.Ay.use(g.A),Y.Ay.use(y.A),Y.Ay.use(f.A),Y.Ay.use(k.A),Y.Ay.use(v.A),Y.Ay.use(m.A),Y.Ay.use(p.A),Y.Ay.use(h.A),Y.Ay.use(u.A),Y.Ay.use(d.A),Y.Ay.use(l.A),Y.Ay.use(c.A),Y.Ay.use(r.A),Y.Ay.use(n.A),Y.Ay.use(i.A),Y.Ay.use(o.A),Y.Ay.use(s.A),Y.Ay.config.productionTip=!1,"serviceWorker"in navigator&&window.addEventListener("load",()=>{ht()});const ft=window.matchMedia("(display-mode: standalone)").matches||!0===window.navigator.standalone;ft&&console.log("应用运行在PWA模式"),Y.Ay.mixin({methods:{$toastWithHaptic(t){switch("string"===typeof t&&(t={message:t}),t.type){case"success":this.$haptic.success();break;case"fail":case"error":this.$haptic.error();break;case"warning":this.$haptic.warning();break;default:this.$haptic.light()}return this.$toast(t)}}}),new Y.Ay({router:Z["default"],store:X.A,render:t=>t(Q)}).$mount("#app")},7939:function(t,e,a){a(8014);var s=a(4202),o=(a(5639),a(1284)),i=a(1821);const n=()=>"/api";let r=0,c=null,l=0,d=null,u=null;const h=500,p=200,m=300,v=15e3,k=()=>{0===r&&(d&&(clearTimeout(d),d=null),c=setTimeout(()=>{r>0?(i.A.commit("SET_LOADING",!0),l=Date.now(),u=setTimeout(()=>{console.warn("Loading timeout, force hiding..."),r=0,i.A.commit("SET_LOADING",!1),d=null,u=null},v)):i.A.state.loading&&i.A.commit("SET_LOADING",!1),c=null},p)),r++},f=()=>{if(r--,r<=0)if(r=0,u&&(clearTimeout(u),u=null),c)clearTimeout(c),c=null,i.A.state.loading&&i.A.commit("SET_LOADING",!1);else if(i.A.state.loading){const t=Date.now()-l,e=Math.max(0,h-t);d=setTimeout(()=>{i.A.commit("SET_LOADING",!1),d=null},e)}};const y=(t,e)=>{setTimeout(()=>{"success"===t?s.A.success(e):"fail"===t?s.A.fail(e):(0,s.A)(e)},m)},g=o.A.create({baseURL:n(),timeout:1e4,headers:{"Content-Type":"application/json"},withCredentials:!0});g.interceptors.request.use(t=>{k();const e=i.A.state.token;return e&&(t.headers.Authorization=`Bearer ${e}`),t},t=>(f(),Promise.reject(t))),g.interceptors.response.use(async t=>{f();const e=t.headers["x-token-refresh-needed"];if("true"===e&&i.A.state.token)try{console.log("🔄 Token即将过期，正在自动刷新...");const t=await o.A.post(`${n()}/auth/refresh-token`,{},{headers:{Authorization:`Bearer ${i.A.state.token}`,"Content-Type":"application/json"},withCredentials:!0});if(t.data&&t.data.success){const e=t.data.data.token;i.A.commit("SET_TOKEN",e),console.log("✅ Token刷新成功")}}catch(s){console.warn("⚠️ Token刷新失败，可能需要重新登录:",s)}const{data:a}=t;if(a.success)return a;throw y("fail",a.message||"请求失败"),new Error(a.message||"请求失败")},t=>{f(),console.error("API Error:",t);let e="网络错误";if(t.response){const{status:s,data:o}=t.response;switch(s){case 400:e=o?.message||"请求参数错误";break;case 401:e="未授权，请重新登录",i.A.commit("CLEAR_AUTH"),Promise.resolve().then(a.bind(a,1396)).then(({default:t})=>{"/login"!==t.currentRoute.path&&t.push("/login")});break;case 403:e="没有权限执行此操作";break;case 404:e="请求的资源不存在";break;case 500:e="服务器内部错误";break;default:e=o?.message||`请求失败 (${s})`}}else e=t.request?"无法连接到服务器，请检查网络":t.message||"请求配置错误";throw y("fail",e),new Error(e)}),e.Ay=g}},function(t){var e=function(e){return t(t.s=e)};t.O(0,[649,865,504],function(){return e(3044)});t.O()}]);